# Generated by Django 4.0.4 on 2022-05-07 00:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('host', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='YcloudInstanceMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('instance_id', models.CharField(blank=True, max_length=200, null=True)),
                ('folder_id', models.CharField(blank=True, max_length=200, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('hostname', models.CharField(blank=True, max_length=200, null=True)),
                ('zone', models.CharField(blank=True, max_length=200, null=True)),
                ('ssh_public_key', models.CharField(blank=True, max_length=200, null=True)),
                ('serial_port_enabled', models.CharField(blank=True, max_length=200, null=True)),
                ('metadata_endpoint', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'ycloud_instance_metadata',
            },
        ),
        migrations.CreateModel(
            name='Yara',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('matches', models.CharField(blank=True, max_length=200, null=True)),
                ('count', models.IntegerField(blank=True, null=True)),
                ('sig_group', models.CharField(blank=True, max_length=200, null=True)),
                ('sigfile', models.CharField(blank=True, max_length=200, null=True)),
                ('sigrule', models.CharField(blank=True, max_length=200, null=True)),
                ('strings', models.CharField(blank=True, max_length=200, null=True)),
                ('tags', models.CharField(blank=True, max_length=200, null=True)),
                ('sigurl', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'yara',
            },
        ),
        migrations.CreateModel(
            name='WmiScriptEventConsumers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('scripting_engine', models.CharField(blank=True, max_length=200, null=True)),
                ('script_file_name', models.CharField(blank=True, max_length=200, null=True)),
                ('script_text', models.CharField(blank=True, max_length=200, null=True)),
                ('class_field', models.CharField(blank=True, db_column='class', max_length=200, null=True)),
                ('relative_path', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'wmi_script_event_consumers',
            },
        ),
        migrations.CreateModel(
            name='WmiFilterConsumerBinding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('consumer', models.CharField(blank=True, max_length=200, null=True)),
                ('filter', models.CharField(blank=True, max_length=200, null=True)),
                ('class_field', models.CharField(blank=True, db_column='class', max_length=200, null=True)),
                ('relative_path', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'wmi_filter_consumer_binding',
            },
        ),
        migrations.CreateModel(
            name='WmiEventFilters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('query', models.CharField(blank=True, max_length=200, null=True)),
                ('query_language', models.CharField(blank=True, max_length=200, null=True)),
                ('class_field', models.CharField(blank=True, db_column='class', max_length=200, null=True)),
                ('relative_path', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'wmi_event_filters',
            },
        ),
        migrations.CreateModel(
            name='WmiCliEventConsumers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('command_line_template', models.CharField(blank=True, max_length=200, null=True)),
                ('executable_path', models.CharField(blank=True, max_length=200, null=True)),
                ('class_field', models.CharField(blank=True, db_column='class', max_length=200, null=True)),
                ('relative_path', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'wmi_cli_event_consumers',
            },
        ),
        migrations.CreateModel(
            name='WmiBiosInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('value', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'wmi_bios_info',
            },
        ),
        migrations.CreateModel(
            name='WindowsSecurityProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('state', models.CharField(blank=True, max_length=200, null=True)),
                ('state_timestamp', models.CharField(blank=True, max_length=200, null=True)),
                ('remediation_path', models.CharField(blank=True, max_length=200, null=True)),
                ('signatures_up_to_date', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'windows_security_products',
            },
        ),
        migrations.CreateModel(
            name='WindowsSecurityCenter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('firewall', models.CharField(blank=True, max_length=200, null=True)),
                ('autoupdate', models.CharField(blank=True, max_length=200, null=True)),
                ('antivirus', models.CharField(blank=True, max_length=200, null=True)),
                ('antispyware', models.CharField(blank=True, max_length=200, null=True)),
                ('internet_settings', models.CharField(blank=True, max_length=200, null=True)),
                ('windows_security_center_service', models.CharField(blank=True, max_length=200, null=True)),
                ('user_account_control', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'windows_security_center',
            },
        ),
        migrations.CreateModel(
            name='WindowsOptionalFeatures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('caption', models.CharField(blank=True, max_length=200, null=True)),
                ('state', models.IntegerField(blank=True, null=True)),
                ('statename', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'windows_optional_features',
            },
        ),
        migrations.CreateModel(
            name='WindowsFirewallRules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('app_name', models.CharField(blank=True, max_length=200, null=True)),
                ('action', models.CharField(blank=True, max_length=200, null=True)),
                ('enabled', models.IntegerField(blank=True, null=True)),
                ('grouping', models.CharField(blank=True, max_length=200, null=True)),
                ('direction', models.CharField(blank=True, max_length=200, null=True)),
                ('protocol', models.CharField(blank=True, max_length=200, null=True)),
                ('local_addresses', models.CharField(blank=True, max_length=200, null=True)),
                ('remote_addresses', models.CharField(blank=True, max_length=200, null=True)),
                ('local_ports', models.CharField(blank=True, max_length=200, null=True)),
                ('remote_ports', models.CharField(blank=True, max_length=200, null=True)),
                ('icmp_types_codes', models.CharField(blank=True, max_length=200, null=True)),
                ('profile_domain', models.IntegerField(blank=True, null=True)),
                ('profile_private', models.IntegerField(blank=True, null=True)),
                ('profile_public', models.IntegerField(blank=True, null=True)),
                ('service_name', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'windows_firewall_rules',
            },
        ),
        migrations.CreateModel(
            name='WindowsEvents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('time', models.BigIntegerField(blank=True, null=True)),
                ('datetime', models.CharField(blank=True, max_length=200, null=True)),
                ('source', models.CharField(blank=True, max_length=200, null=True)),
                ('provider_name', models.CharField(blank=True, max_length=200, null=True)),
                ('provider_guid', models.CharField(blank=True, max_length=200, null=True)),
                ('computer_name', models.CharField(blank=True, max_length=200, null=True)),
                ('eventid', models.IntegerField(blank=True, null=True)),
                ('task', models.IntegerField(blank=True, null=True)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('keywords', models.CharField(blank=True, max_length=200, null=True)),
                ('data', models.CharField(blank=True, max_length=200, null=True)),
                ('eid', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'windows_events',
            },
        ),
        migrations.CreateModel(
            name='WindowsEventlog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('channel', models.CharField(blank=True, max_length=200, null=True)),
                ('datetime', models.CharField(blank=True, max_length=200, null=True)),
                ('task', models.IntegerField(blank=True, null=True)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('provider_name', models.CharField(blank=True, max_length=200, null=True)),
                ('provider_guid', models.CharField(blank=True, max_length=200, null=True)),
                ('computer_name', models.CharField(blank=True, max_length=200, null=True)),
                ('eventid', models.IntegerField(blank=True, null=True)),
                ('keywords', models.CharField(blank=True, max_length=200, null=True)),
                ('data', models.CharField(blank=True, max_length=200, null=True)),
                ('pid', models.IntegerField(blank=True, null=True)),
                ('tid', models.IntegerField(blank=True, null=True)),
                ('time_range', models.CharField(blank=True, max_length=200, null=True)),
                ('timestamp', models.CharField(blank=True, max_length=200, null=True)),
                ('xpath', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'windows_eventlog',
            },
        ),
        migrations.CreateModel(
            name='WindowsCrashes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('datetime', models.CharField(blank=True, max_length=200, null=True)),
                ('module', models.CharField(blank=True, max_length=200, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('pid', models.BigIntegerField(blank=True, null=True)),
                ('tid', models.BigIntegerField(blank=True, null=True)),
                ('version', models.CharField(blank=True, max_length=200, null=True)),
                ('process_uptime', models.BigIntegerField(blank=True, null=True)),
                ('stack_trace', models.CharField(blank=True, max_length=200, null=True)),
                ('exception_code', models.CharField(blank=True, max_length=200, null=True)),
                ('exception_message', models.CharField(blank=True, max_length=200, null=True)),
                ('exception_address', models.CharField(blank=True, max_length=200, null=True)),
                ('registers', models.CharField(blank=True, max_length=200, null=True)),
                ('command_line', models.CharField(blank=True, max_length=200, null=True)),
                ('current_directory', models.CharField(blank=True, max_length=200, null=True)),
                ('username', models.CharField(blank=True, max_length=200, null=True)),
                ('machine_name', models.CharField(blank=True, max_length=200, null=True)),
                ('major_version', models.IntegerField(blank=True, null=True)),
                ('minor_version', models.IntegerField(blank=True, null=True)),
                ('build_number', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('crash_path', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'windows_crashes',
            },
        ),
        migrations.CreateModel(
            name='Winbaseobj',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('session_id', models.IntegerField(blank=True, null=True)),
                ('object_name', models.CharField(blank=True, max_length=200, null=True)),
                ('object_type', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'winbaseobj',
            },
        ),
        migrations.CreateModel(
            name='VideoInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('color_depth', models.IntegerField(blank=True, null=True)),
                ('driver', models.CharField(blank=True, max_length=200, null=True)),
                ('driver_date', models.BigIntegerField(blank=True, null=True)),
                ('driver_version', models.CharField(blank=True, max_length=200, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=200, null=True)),
                ('model', models.CharField(blank=True, max_length=200, null=True)),
                ('series', models.CharField(blank=True, max_length=200, null=True)),
                ('video_mode', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'video_info',
            },
        ),
        migrations.CreateModel(
            name='UserSshKeys',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('uid', models.BigIntegerField(blank=True, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('encrypted', models.IntegerField(blank=True, null=True)),
                ('key_type', models.CharField(blank=True, max_length=200, null=True)),
                ('pid_with_namespace', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'user_ssh_keys',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('uid', models.BigIntegerField(blank=True, null=True)),
                ('gid', models.BigIntegerField(blank=True, null=True)),
                ('uid_signed', models.BigIntegerField(blank=True, null=True)),
                ('gid_signed', models.BigIntegerField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('directory', models.CharField(blank=True, max_length=200, null=True)),
                ('shell', models.CharField(blank=True, max_length=200, null=True)),
                ('uuid', models.CharField(blank=True, max_length=200, null=True)),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('is_field', models.IntegerField(blank=True, db_column='is_', null=True)),
                ('pid_with_namespace', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='UserGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('uid', models.BigIntegerField(blank=True, null=True)),
                ('gid', models.BigIntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'user_groups',
            },
        ),
        migrations.CreateModel(
            name='Userassist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('last_execution_time', models.BigIntegerField(blank=True, null=True)),
                ('count', models.IntegerField(blank=True, null=True)),
                ('sid', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'userassist',
            },
        ),
        migrations.CreateModel(
            name='Uptime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('days', models.IntegerField(blank=True, null=True)),
                ('hours', models.IntegerField(blank=True, null=True)),
                ('minutes', models.IntegerField(blank=True, null=True)),
                ('seconds', models.IntegerField(blank=True, null=True)),
                ('total_seconds', models.BigIntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'uptime',
            },
        ),
        migrations.CreateModel(
            name='TpmInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('activated', models.IntegerField(blank=True, null=True)),
                ('enabled', models.IntegerField(blank=True, null=True)),
                ('owned', models.IntegerField(blank=True, null=True)),
                ('manufacturer_version', models.CharField(blank=True, max_length=200, null=True)),
                ('manufacturer_id', models.IntegerField(blank=True, null=True)),
                ('manufacturer_name', models.CharField(blank=True, max_length=200, null=True)),
                ('product_name', models.CharField(blank=True, max_length=200, null=True)),
                ('physical_presence_version', models.CharField(blank=True, max_length=200, null=True)),
                ('spec_version', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'tpm_info',
            },
        ),
        migrations.CreateModel(
            name='Time',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('weekday', models.CharField(blank=True, max_length=200, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('day', models.IntegerField(blank=True, null=True)),
                ('hour', models.IntegerField(blank=True, null=True)),
                ('minutes', models.IntegerField(blank=True, null=True)),
                ('seconds', models.IntegerField(blank=True, null=True)),
                ('timezone', models.CharField(blank=True, max_length=200, null=True)),
                ('local_timezone', models.CharField(blank=True, max_length=200, null=True)),
                ('unix_time', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.CharField(blank=True, max_length=200, null=True)),
                ('datetime', models.CharField(blank=True, max_length=200, null=True)),
                ('iso_8601', models.CharField(blank=True, max_length=200, null=True)),
                ('win_timestamp', models.BigIntegerField(blank=True, null=True)),
                ('date_time', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'time',
            },
        ),
        migrations.CreateModel(
            name='SystemInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('hostname', models.CharField(blank=True, max_length=200, null=True)),
                ('uuid', models.CharField(blank=True, max_length=200, null=True)),
                ('cpu_type', models.CharField(blank=True, max_length=200, null=True)),
                ('cpu_subtype', models.CharField(blank=True, max_length=200, null=True)),
                ('cpu_brand', models.CharField(blank=True, max_length=200, null=True)),
                ('cpu_physical_cores', models.IntegerField(blank=True, null=True)),
                ('cpu_logical_cores', models.IntegerField(blank=True, null=True)),
                ('cpu_microcode', models.CharField(blank=True, max_length=200, null=True)),
                ('physical_memory', models.BigIntegerField(blank=True, null=True)),
                ('hardware_vendor', models.CharField(blank=True, max_length=200, null=True)),
                ('hardware_model', models.CharField(blank=True, max_length=200, null=True)),
                ('hardware_version', models.CharField(blank=True, max_length=200, null=True)),
                ('hardware_serial', models.CharField(blank=True, max_length=200, null=True)),
                ('board_vendor', models.CharField(blank=True, max_length=200, null=True)),
                ('board_model', models.CharField(blank=True, max_length=200, null=True)),
                ('board_version', models.CharField(blank=True, max_length=200, null=True)),
                ('board_serial', models.CharField(blank=True, max_length=200, null=True)),
                ('computer_name', models.CharField(blank=True, max_length=200, null=True)),
                ('local_hostname', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'system_info',
            },
        ),
        migrations.CreateModel(
            name='StartupItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('args', models.CharField(blank=True, max_length=200, null=True)),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('source', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(blank=True, max_length=200, null=True)),
                ('username', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'startup_items',
            },
        ),
        migrations.CreateModel(
            name='SshConfigs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('uid', models.BigIntegerField(blank=True, null=True)),
                ('block', models.CharField(blank=True, max_length=200, null=True)),
                ('option', models.CharField(blank=True, max_length=200, null=True)),
                ('ssh_config_file', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'ssh_configs',
            },
        ),
        migrations.CreateModel(
            name='ShortcutFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('target_path', models.CharField(blank=True, max_length=200, null=True)),
                ('target_modified', models.IntegerField(blank=True, null=True)),
                ('target_created', models.IntegerField(blank=True, null=True)),
                ('target_accessed', models.IntegerField(blank=True, null=True)),
                ('target_size', models.BigIntegerField(blank=True, null=True)),
                ('relative_path', models.CharField(blank=True, max_length=200, null=True)),
                ('local_path', models.CharField(blank=True, max_length=200, null=True)),
                ('working_path', models.CharField(blank=True, max_length=200, null=True)),
                ('icon_path', models.CharField(blank=True, max_length=200, null=True)),
                ('common_path', models.CharField(blank=True, max_length=200, null=True)),
                ('command_args', models.CharField(blank=True, max_length=200, null=True)),
                ('hostname', models.CharField(blank=True, max_length=200, null=True)),
                ('share_name', models.CharField(blank=True, max_length=200, null=True)),
                ('device_type', models.CharField(blank=True, max_length=200, null=True)),
                ('volume_serial', models.CharField(blank=True, max_length=200, null=True)),
                ('mft_entry', models.BigIntegerField(blank=True, null=True)),
                ('mft_sequence', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'shortcut_files',
            },
        ),
        migrations.CreateModel(
            name='Shimcache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('entry', models.IntegerField(blank=True, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('modified_time', models.IntegerField(blank=True, null=True)),
                ('execution_flag', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'shimcache',
            },
        ),
        migrations.CreateModel(
            name='Shellbags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('sid', models.CharField(blank=True, max_length=200, null=True)),
                ('source', models.CharField(blank=True, max_length=200, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('modified_time', models.BigIntegerField(blank=True, null=True)),
                ('created_time', models.BigIntegerField(blank=True, null=True)),
                ('accessed_time', models.BigIntegerField(blank=True, null=True)),
                ('mft_entry', models.BigIntegerField(blank=True, null=True)),
                ('mft_sequence', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'shellbags',
            },
        ),
        migrations.CreateModel(
            name='SharedResources',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('install_date', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(blank=True, max_length=200, null=True)),
                ('allow_maximum', models.IntegerField(blank=True, null=True)),
                ('maximum_allowed', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'shared_resources',
            },
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('service_type', models.CharField(blank=True, max_length=200, null=True)),
                ('display_name', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(blank=True, max_length=200, null=True)),
                ('pid', models.IntegerField(blank=True, null=True)),
                ('start_type', models.CharField(blank=True, max_length=200, null=True)),
                ('win32_exit_code', models.IntegerField(blank=True, null=True)),
                ('service_exit_code', models.IntegerField(blank=True, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('module_path', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('user_account', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'services',
            },
        ),
        migrations.CreateModel(
            name='Secureboot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('secure_boot', models.IntegerField(blank=True, null=True)),
                ('setup_mode', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'secureboot',
            },
        ),
        migrations.CreateModel(
            name='ScheduledTasks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('action', models.CharField(blank=True, max_length=200, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('enabled', models.IntegerField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=200, null=True)),
                ('hidden', models.IntegerField(blank=True, null=True)),
                ('last_run_time', models.BigIntegerField(blank=True, null=True)),
                ('next_run_time', models.BigIntegerField(blank=True, null=True)),
                ('last_run_message', models.CharField(blank=True, max_length=200, null=True)),
                ('last_run_code', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'scheduled_tasks',
            },
        ),
        migrations.CreateModel(
            name='Routes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('destination', models.CharField(blank=True, max_length=200, null=True)),
                ('netmask', models.IntegerField(blank=True, null=True)),
                ('gateway', models.CharField(blank=True, max_length=200, null=True)),
                ('source', models.CharField(blank=True, max_length=200, null=True)),
                ('flags', models.IntegerField(blank=True, null=True)),
                ('interface', models.CharField(blank=True, max_length=200, null=True)),
                ('mtu', models.IntegerField(blank=True, null=True)),
                ('metric', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('hopcount', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'routes',
            },
        ),
        migrations.CreateModel(
            name='Registry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('key', models.CharField(blank=True, max_length=200, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('data', models.CharField(blank=True, max_length=200, null=True)),
                ('mtime', models.BigIntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'registry',
            },
        ),
        migrations.CreateModel(
            name='PythonPackages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('version', models.CharField(blank=True, max_length=200, null=True)),
                ('summary', models.CharField(blank=True, max_length=200, null=True)),
                ('author', models.CharField(blank=True, max_length=200, null=True)),
                ('license', models.CharField(blank=True, max_length=200, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('directory', models.CharField(blank=True, max_length=200, null=True)),
                ('pid_with_namespace', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'python_packages',
            },
        ),
        migrations.CreateModel(
            name='Programs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('version', models.CharField(blank=True, max_length=200, null=True)),
                ('install_location', models.CharField(blank=True, max_length=200, null=True)),
                ('install_source', models.CharField(blank=True, max_length=200, null=True)),
                ('language', models.CharField(blank=True, max_length=200, null=True)),
                ('publisher', models.CharField(blank=True, max_length=200, null=True)),
                ('uninstall_string', models.CharField(blank=True, max_length=200, null=True)),
                ('install_date', models.CharField(blank=True, max_length=200, null=True)),
                ('identifying_number', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'programs',
            },
        ),
        migrations.CreateModel(
            name='ProcessOpenSockets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('pid', models.IntegerField(blank=True, null=True)),
                ('fd', models.BigIntegerField(blank=True, null=True)),
                ('socket', models.BigIntegerField(blank=True, null=True)),
                ('family', models.IntegerField(blank=True, null=True)),
                ('protocol', models.IntegerField(blank=True, null=True)),
                ('local_address', models.CharField(blank=True, max_length=200, null=True)),
                ('remote_address', models.CharField(blank=True, max_length=200, null=True)),
                ('local_port', models.IntegerField(blank=True, null=True)),
                ('remote_port', models.IntegerField(blank=True, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('state', models.CharField(blank=True, max_length=200, null=True)),
                ('net_namespace', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'process_open_sockets',
            },
        ),
        migrations.CreateModel(
            name='ProcessMemoryMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('pid', models.IntegerField(blank=True, null=True)),
                ('start', models.CharField(blank=True, max_length=200, null=True)),
                ('end', models.CharField(blank=True, max_length=200, null=True)),
                ('permissions', models.CharField(blank=True, max_length=200, null=True)),
                ('offset', models.BigIntegerField(blank=True, null=True)),
                ('device', models.CharField(blank=True, max_length=200, null=True)),
                ('inode', models.IntegerField(blank=True, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('pseudo', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'process_memory_map',
            },
        ),
        migrations.CreateModel(
            name='Processes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('pid', models.BigIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('cmdline', models.TextField(max_length=8000)),
                ('state', models.CharField(blank=True, max_length=200, null=True)),
                ('cwd', models.CharField(blank=True, max_length=200, null=True)),
                ('root', models.CharField(blank=True, max_length=200, null=True)),
                ('uid', models.BigIntegerField(blank=True, null=True)),
                ('gid', models.BigIntegerField(blank=True, null=True)),
                ('euid', models.BigIntegerField(blank=True, null=True)),
                ('egid', models.BigIntegerField(blank=True, null=True)),
                ('suid', models.BigIntegerField(blank=True, null=True)),
                ('sgid', models.BigIntegerField(blank=True, null=True)),
                ('on_disk', models.IntegerField(blank=True, null=True)),
                ('wired_size', models.BigIntegerField(blank=True, null=True)),
                ('resident_size', models.BigIntegerField(blank=True, null=True)),
                ('total_size', models.BigIntegerField(blank=True, null=True)),
                ('user_time', models.BigIntegerField(blank=True, null=True)),
                ('system_time', models.BigIntegerField(blank=True, null=True)),
                ('disk_bytes_read', models.BigIntegerField(blank=True, null=True)),
                ('disk_bytes_written', models.BigIntegerField(blank=True, null=True)),
                ('start_time', models.BigIntegerField(blank=True, null=True)),
                ('parent', models.BigIntegerField(blank=True, null=True)),
                ('pgroup', models.BigIntegerField(blank=True, null=True)),
                ('threads', models.IntegerField(blank=True, null=True)),
                ('nice', models.IntegerField(blank=True, null=True)),
                ('elevated_token', models.IntegerField(blank=True, null=True)),
                ('secure_process', models.IntegerField(blank=True, null=True)),
                ('protection_type', models.CharField(blank=True, max_length=200, null=True)),
                ('virtual_process', models.IntegerField(blank=True, null=True)),
                ('elapsed_time', models.BigIntegerField(blank=True, null=True)),
                ('handle_count', models.BigIntegerField(blank=True, null=True)),
                ('percent_processor_time', models.BigIntegerField(blank=True, null=True)),
                ('upid', models.BigIntegerField(blank=True, null=True)),
                ('uppid', models.BigIntegerField(blank=True, null=True)),
                ('cpu_type', models.IntegerField(blank=True, null=True)),
                ('cpu_subtype', models.IntegerField(blank=True, null=True)),
                ('phys_footprint', models.BigIntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'processes',
            },
        ),
        migrations.CreateModel(
            name='Prefetch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('filename', models.CharField(blank=True, max_length=200, null=True)),
                ('hash', models.CharField(blank=True, max_length=200, null=True)),
                ('last_run_time', models.IntegerField(blank=True, null=True)),
                ('other_run_times', models.CharField(blank=True, max_length=200, null=True)),
                ('run_count', models.IntegerField(blank=True, null=True)),
                ('size', models.IntegerField(blank=True, null=True)),
                ('volume_serial', models.CharField(blank=True, max_length=200, null=True)),
                ('volume_creation', models.CharField(blank=True, max_length=200, null=True)),
                ('accessed_files_count', models.IntegerField(blank=True, null=True)),
                ('accessed_directories_count', models.IntegerField(blank=True, null=True)),
                ('accessed_files', models.CharField(blank=True, max_length=200, null=True)),
                ('accessed_directories', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'prefetch',
            },
        ),
        migrations.CreateModel(
            name='PowershellEvents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('time', models.BigIntegerField(blank=True, null=True)),
                ('datetime', models.CharField(blank=True, max_length=200, null=True)),
                ('script_block_id', models.CharField(blank=True, max_length=200, null=True)),
                ('script_block_count', models.IntegerField(blank=True, null=True)),
                ('script_text', models.CharField(blank=True, max_length=200, null=True)),
                ('script_name', models.CharField(blank=True, max_length=200, null=True)),
                ('script_path', models.CharField(blank=True, max_length=200, null=True)),
                ('cosine_similarity', models.FloatField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'powershell_events',
            },
        ),
        migrations.CreateModel(
            name='PlatformInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('vendor', models.CharField(blank=True, max_length=200, null=True)),
                ('version', models.CharField(blank=True, max_length=200, null=True)),
                ('date', models.CharField(blank=True, max_length=200, null=True)),
                ('revision', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('size', models.CharField(blank=True, max_length=200, null=True)),
                ('volume_size', models.IntegerField(blank=True, null=True)),
                ('extra', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'platform_info',
            },
        ),
        migrations.CreateModel(
            name='Pipes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('pid', models.BigIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('instances', models.IntegerField(blank=True, null=True)),
                ('max_instances', models.IntegerField(blank=True, null=True)),
                ('flags', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'pipes',
            },
        ),
        migrations.CreateModel(
            name='PhysicalDiskPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('avg_disk_bytes_per_read', models.BigIntegerField(blank=True, null=True)),
                ('avg_disk_bytes_per_write', models.BigIntegerField(blank=True, null=True)),
                ('avg_disk_read_queue_length', models.BigIntegerField(blank=True, null=True)),
                ('avg_disk_write_queue_length', models.BigIntegerField(blank=True, null=True)),
                ('avg_disk_sec_per_read', models.IntegerField(blank=True, null=True)),
                ('avg_disk_sec_per_write', models.IntegerField(blank=True, null=True)),
                ('current_disk_queue_length', models.IntegerField(blank=True, null=True)),
                ('percent_disk_read_time', models.BigIntegerField(blank=True, null=True)),
                ('percent_disk_write_time', models.BigIntegerField(blank=True, null=True)),
                ('percent_disk_time', models.BigIntegerField(blank=True, null=True)),
                ('percent_idle_time', models.BigIntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'physical_disk_performance',
            },
        ),
        migrations.CreateModel(
            name='Patches',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('csname', models.CharField(blank=True, max_length=200, null=True)),
                ('hotfix_id', models.CharField(blank=True, max_length=200, null=True)),
                ('caption', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('fix_comments', models.CharField(blank=True, max_length=200, null=True)),
                ('installed_by', models.CharField(blank=True, max_length=200, null=True)),
                ('install_date', models.CharField(blank=True, max_length=200, null=True)),
                ('installed_on', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'patches',
            },
        ),
        migrations.CreateModel(
            name='OsVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('version', models.CharField(blank=True, max_length=200, null=True)),
                ('major', models.IntegerField(blank=True, null=True)),
                ('minor', models.IntegerField(blank=True, null=True)),
                ('patch', models.IntegerField(blank=True, null=True)),
                ('build', models.CharField(blank=True, max_length=200, null=True)),
                ('platform', models.CharField(blank=True, max_length=200, null=True)),
                ('platform_like', models.CharField(blank=True, max_length=200, null=True)),
                ('codename', models.CharField(blank=True, max_length=200, null=True)),
                ('arch', models.CharField(blank=True, max_length=200, null=True)),
                ('install_date', models.BigIntegerField(blank=True, null=True)),
                ('pid_with_namespace', models.IntegerField(blank=True, null=True)),
                ('mount_namespace_id', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'os_version',
            },
        ),
        migrations.CreateModel(
            name='OsquerySchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('query', models.CharField(blank=True, max_length=200, null=True)),
                ('interval', models.IntegerField(blank=True, null=True)),
                ('executions', models.BigIntegerField(blank=True, null=True)),
                ('last_executed', models.BigIntegerField(blank=True, null=True)),
                ('denylisted', models.IntegerField(blank=True, null=True)),
                ('output_size', models.BigIntegerField(blank=True, null=True)),
                ('wall_time', models.BigIntegerField(blank=True, null=True)),
                ('user_time', models.BigIntegerField(blank=True, null=True)),
                ('system_time', models.BigIntegerField(blank=True, null=True)),
                ('average_memory', models.BigIntegerField(blank=True, null=True)),
                ('blacklisted', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'osquery_schedule',
            },
        ),
        migrations.CreateModel(
            name='OsqueryRegistry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('registry', models.CharField(blank=True, max_length=200, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('owner_uuid', models.IntegerField(blank=True, null=True)),
                ('internal', models.IntegerField(blank=True, null=True)),
                ('active', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'osquery_registry',
            },
        ),
        migrations.CreateModel(
            name='OsqueryPacks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('platform', models.CharField(blank=True, max_length=200, null=True)),
                ('version', models.CharField(blank=True, max_length=200, null=True)),
                ('shard', models.IntegerField(blank=True, null=True)),
                ('discovery_cache_hits', models.IntegerField(blank=True, null=True)),
                ('discovery_executions', models.IntegerField(blank=True, null=True)),
                ('active', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'osquery_packs',
            },
        ),
        migrations.CreateModel(
            name='OsqueryInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('pid', models.IntegerField(blank=True, null=True)),
                ('uuid', models.CharField(blank=True, max_length=200, null=True)),
                ('instance_id', models.CharField(blank=True, max_length=200, null=True)),
                ('version', models.CharField(blank=True, max_length=200, null=True)),
                ('config_hash', models.CharField(blank=True, max_length=200, null=True)),
                ('config_valid', models.IntegerField(blank=True, null=True)),
                ('extensions', models.CharField(blank=True, max_length=200, null=True)),
                ('build_platform', models.CharField(blank=True, max_length=200, null=True)),
                ('build_distro', models.CharField(blank=True, max_length=200, null=True)),
                ('start_time', models.IntegerField(blank=True, null=True)),
                ('watcher', models.IntegerField(blank=True, null=True)),
                ('platform_mask', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'osquery_info',
            },
        ),
        migrations.CreateModel(
            name='OsqueryFlags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('default_value', models.CharField(blank=True, max_length=200, null=True)),
                ('value', models.CharField(blank=True, max_length=200, null=True)),
                ('shell_only', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'osquery_flags',
            },
        ),
        migrations.CreateModel(
            name='OsqueryExtensions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('uuid', models.BigIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('version', models.CharField(blank=True, max_length=200, null=True)),
                ('sdk_version', models.CharField(blank=True, max_length=200, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'osquery_extensions',
            },
        ),
        migrations.CreateModel(
            name='OsqueryEvents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('publisher', models.CharField(blank=True, max_length=200, null=True)),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('subscriptions', models.IntegerField(blank=True, null=True)),
                ('events', models.IntegerField(blank=True, null=True)),
                ('refreshes', models.IntegerField(blank=True, null=True)),
                ('active', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'osquery_events',
            },
        ),
        migrations.CreateModel(
            name='OfficeMru',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('application', models.CharField(blank=True, max_length=200, null=True)),
                ('version', models.CharField(blank=True, max_length=200, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('last_opened_time', models.BigIntegerField(blank=True, null=True)),
                ('sid', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'office_mru',
            },
        ),
        migrations.CreateModel(
            name='NtfsJournalEvents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('action', models.CharField(blank=True, max_length=200, null=True)),
                ('category', models.CharField(blank=True, max_length=200, null=True)),
                ('old_path', models.CharField(blank=True, max_length=200, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('record_timestamp', models.CharField(blank=True, max_length=200, null=True)),
                ('record_usn', models.CharField(blank=True, max_length=200, null=True)),
                ('node_ref_number', models.CharField(blank=True, max_length=200, null=True)),
                ('parent_ref_number', models.CharField(blank=True, max_length=200, null=True)),
                ('drive_letter', models.CharField(blank=True, max_length=200, null=True)),
                ('file_attributes', models.CharField(blank=True, max_length=200, null=True)),
                ('partial', models.BigIntegerField(blank=True, null=True)),
                ('time', models.BigIntegerField(blank=True, null=True)),
                ('eid', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'ntfs_journal_events',
            },
        ),
        migrations.CreateModel(
            name='NtfsAclPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('principal', models.CharField(blank=True, max_length=200, null=True)),
                ('access', models.CharField(blank=True, max_length=200, null=True)),
                ('inherited_from', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'ntfs_acl_permissions',
            },
        ),
        migrations.CreateModel(
            name='Ntdomains',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('client_site_name', models.CharField(blank=True, max_length=200, null=True)),
                ('dc_site_name', models.CharField(blank=True, max_length=200, null=True)),
                ('dns_forest_name', models.CharField(blank=True, max_length=200, null=True)),
                ('domain_controller_address', models.CharField(blank=True, max_length=200, null=True)),
                ('domain_controller_name', models.CharField(blank=True, max_length=200, null=True)),
                ('domain_name', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'ntdomains',
            },
        ),
        migrations.CreateModel(
            name='LogonSessions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('logon_id', models.IntegerField(blank=True, null=True)),
                ('user', models.CharField(blank=True, max_length=200, null=True)),
                ('logon_domain', models.CharField(blank=True, max_length=200, null=True)),
                ('authentication_package', models.CharField(blank=True, max_length=200, null=True)),
                ('logon_type', models.CharField(blank=True, max_length=200, null=True)),
                ('session_id', models.IntegerField(blank=True, null=True)),
                ('logon_sid', models.CharField(blank=True, max_length=200, null=True)),
                ('logon_time', models.BigIntegerField(blank=True, null=True)),
                ('logon_server', models.CharField(blank=True, max_length=200, null=True)),
                ('dns_domain_name', models.CharField(blank=True, max_length=200, null=True)),
                ('upn', models.CharField(blank=True, max_length=200, null=True)),
                ('logon_script', models.CharField(blank=True, max_length=200, null=True)),
                ('profile_path', models.CharField(blank=True, max_length=200, null=True)),
                ('home_directory', models.CharField(blank=True, max_length=200, null=True)),
                ('home_directory_drive', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'logon_sessions',
            },
        ),
        migrations.CreateModel(
            name='LogicalDrives',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('device_id', models.CharField(blank=True, max_length=200, null=True)),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('free_space', models.BigIntegerField(blank=True, null=True)),
                ('size', models.BigIntegerField(blank=True, null=True)),
                ('file_system', models.CharField(blank=True, max_length=200, null=True)),
                ('boot_partition', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'logical_drives',
            },
        ),
        migrations.CreateModel(
            name='LoggedInUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('user', models.CharField(blank=True, max_length=200, null=True)),
                ('tty', models.CharField(blank=True, max_length=200, null=True)),
                ('host', models.CharField(blank=True, max_length=200, null=True)),
                ('time', models.BigIntegerField(blank=True, null=True)),
                ('pid', models.IntegerField(blank=True, null=True)),
                ('sid', models.CharField(blank=True, max_length=200, null=True)),
                ('registry_hive', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'logged_in_users',
            },
        ),
        migrations.CreateModel(
            name='ListeningPorts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('pid', models.IntegerField(blank=True, null=True)),
                ('port', models.IntegerField(blank=True, null=True)),
                ('protocol', models.IntegerField(blank=True, null=True)),
                ('family', models.IntegerField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('fd', models.BigIntegerField(blank=True, null=True)),
                ('socket', models.BigIntegerField(blank=True, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('net_namespace', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'listening_ports',
            },
        ),
        migrations.CreateModel(
            name='KvaSpeculativeInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('kva_shadow_enabled', models.IntegerField(blank=True, null=True)),
                ('kva_shadow_user_global', models.IntegerField(blank=True, null=True)),
                ('kva_shadow_pcid', models.IntegerField(blank=True, null=True)),
                ('kva_shadow_inv_pcid', models.IntegerField(blank=True, null=True)),
                ('bp_mitigations', models.IntegerField(blank=True, null=True)),
                ('bp_system_pol_disabled', models.IntegerField(blank=True, null=True)),
                ('bp_microcode_disabled', models.IntegerField(blank=True, null=True)),
                ('cpu_spec_ctrl_supported', models.IntegerField(blank=True, null=True)),
                ('ibrs_support_enabled', models.IntegerField(blank=True, null=True)),
                ('stibp_support_enabled', models.IntegerField(blank=True, null=True)),
                ('cpu_pred_cmd_supported', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'kva_speculative_info',
            },
        ),
        migrations.CreateModel(
            name='KernelInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('version', models.CharField(blank=True, max_length=200, null=True)),
                ('arguments', models.CharField(blank=True, max_length=200, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('device', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'kernel_info',
            },
        ),
        migrations.CreateModel(
            name='InterfaceDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('interface', models.CharField(blank=True, max_length=200, null=True)),
                ('mac', models.CharField(blank=True, max_length=200, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('mtu', models.IntegerField(blank=True, null=True)),
                ('metric', models.IntegerField(blank=True, null=True)),
                ('flags', models.IntegerField(blank=True, null=True)),
                ('ipackets', models.BigIntegerField(blank=True, null=True)),
                ('opackets', models.BigIntegerField(blank=True, null=True)),
                ('ibytes', models.BigIntegerField(blank=True, null=True)),
                ('obytes', models.BigIntegerField(blank=True, null=True)),
                ('ierrors', models.BigIntegerField(blank=True, null=True)),
                ('oerrors', models.BigIntegerField(blank=True, null=True)),
                ('idrops', models.BigIntegerField(blank=True, null=True)),
                ('odrops', models.BigIntegerField(blank=True, null=True)),
                ('collisions', models.BigIntegerField(blank=True, null=True)),
                ('last_change', models.BigIntegerField(blank=True, null=True)),
                ('link_speed', models.BigIntegerField(blank=True, null=True)),
                ('pci_slot', models.CharField(blank=True, max_length=200, null=True)),
                ('friendly_name', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=200, null=True)),
                ('connection_id', models.CharField(blank=True, max_length=200, null=True)),
                ('connection_status', models.CharField(blank=True, max_length=200, null=True)),
                ('enabled', models.IntegerField(blank=True, null=True)),
                ('physical_adapter', models.IntegerField(blank=True, null=True)),
                ('speed', models.IntegerField(blank=True, null=True)),
                ('service', models.CharField(blank=True, max_length=200, null=True)),
                ('dhcp_enabled', models.IntegerField(blank=True, null=True)),
                ('dhcp_lease_expires', models.CharField(blank=True, max_length=200, null=True)),
                ('dhcp_lease_obtained', models.CharField(blank=True, max_length=200, null=True)),
                ('dhcp_server', models.CharField(blank=True, max_length=200, null=True)),
                ('dns_domain', models.CharField(blank=True, max_length=200, null=True)),
                ('dns_domain_suffix_search_order', models.CharField(blank=True, max_length=200, null=True)),
                ('dns_host_name', models.CharField(blank=True, max_length=200, null=True)),
                ('dns_server_search_order', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'interface_details',
            },
        ),
        migrations.CreateModel(
            name='InterfaceAddresses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('interface', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('mask', models.CharField(blank=True, max_length=200, null=True)),
                ('broadcast', models.CharField(blank=True, max_length=200, null=True)),
                ('point_to_point', models.CharField(blank=True, max_length=200, null=True)),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('friendly_name', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'interface_addresses',
            },
        ),
        migrations.CreateModel(
            name='IntelMeInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('version', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'intel_me_info',
            },
        ),
        migrations.CreateModel(
            name='IeExtensions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('registry_path', models.CharField(blank=True, max_length=200, null=True)),
                ('version', models.CharField(blank=True, max_length=200, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'ie_extensions',
            },
        ),
        migrations.CreateModel(
            name='HvciStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('version', models.CharField(blank=True, max_length=200, null=True)),
                ('instance_identifier', models.CharField(blank=True, max_length=200, null=True)),
                ('vbs_status', models.CharField(blank=True, max_length=200, null=True)),
                ('code_integrity_policy_enforcement_status', models.CharField(blank=True, max_length=200, null=True)),
                ('umci_policy_status', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'hvci_status',
            },
        ),
        migrations.CreateModel(
            name='Hash',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('directory', models.CharField(blank=True, max_length=200, null=True)),
                ('md5', models.CharField(blank=True, max_length=200, null=True)),
                ('sha1', models.CharField(blank=True, max_length=200, null=True)),
                ('sha256', models.CharField(blank=True, max_length=200, null=True)),
                ('ssdeep', models.CharField(blank=True, max_length=200, null=True)),
                ('pid_with_namespace', models.IntegerField(blank=True, null=True)),
                ('mount_namespace_id', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'hash',
            },
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('gid', models.BigIntegerField(blank=True, null=True)),
                ('gid_signed', models.BigIntegerField(blank=True, null=True)),
                ('groupname', models.CharField(blank=True, max_length=200, null=True)),
                ('group_sid', models.CharField(blank=True, max_length=200, null=True)),
                ('comment', models.CharField(blank=True, max_length=200, null=True)),
                ('is_field', models.IntegerField(blank=True, db_column='is_', null=True)),
                ('pid_with_namespace', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'groups',
            },
        ),
        migrations.CreateModel(
            name='FirefoxAddons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('uid', models.BigIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('identifier', models.CharField(blank=True, max_length=200, null=True)),
                ('creator', models.CharField(blank=True, max_length=200, null=True)),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('version', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('source_url', models.CharField(blank=True, max_length=200, null=True)),
                ('visible', models.IntegerField(blank=True, null=True)),
                ('active', models.IntegerField(blank=True, null=True)),
                ('disabled', models.IntegerField(blank=True, null=True)),
                ('autoupdate', models.IntegerField(blank=True, null=True)),
                ('native', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'firefox_addons',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('directory', models.CharField(blank=True, max_length=200, null=True)),
                ('filename', models.CharField(blank=True, max_length=200, null=True)),
                ('inode', models.BigIntegerField(blank=True, null=True)),
                ('uid', models.BigIntegerField(blank=True, null=True)),
                ('gid', models.BigIntegerField(blank=True, null=True)),
                ('mode', models.CharField(blank=True, max_length=200, null=True)),
                ('device', models.BigIntegerField(blank=True, null=True)),
                ('size', models.BigIntegerField(blank=True, null=True)),
                ('block_size', models.IntegerField(blank=True, null=True)),
                ('atime', models.BigIntegerField(blank=True, null=True)),
                ('mtime', models.BigIntegerField(blank=True, null=True)),
                ('ctime', models.BigIntegerField(blank=True, null=True)),
                ('btime', models.BigIntegerField(blank=True, null=True)),
                ('hard_links', models.IntegerField(blank=True, null=True)),
                ('symlink', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('attributes', models.CharField(blank=True, max_length=200, null=True)),
                ('volume_serial', models.CharField(blank=True, max_length=200, null=True)),
                ('file_id', models.CharField(blank=True, max_length=200, null=True)),
                ('file_version', models.CharField(blank=True, max_length=200, null=True)),
                ('product_version', models.CharField(blank=True, max_length=200, null=True)),
                ('bsd_flags', models.CharField(blank=True, max_length=200, null=True)),
                ('pid_with_namespace', models.IntegerField(blank=True, null=True)),
                ('mount_namespace_id', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'file',
            },
        ),
        migrations.CreateModel(
            name='EtcServices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('port', models.IntegerField(blank=True, null=True)),
                ('protocol', models.CharField(blank=True, max_length=200, null=True)),
                ('aliases', models.CharField(blank=True, max_length=200, null=True)),
                ('comment', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'etc_services',
            },
        ),
        migrations.CreateModel(
            name='EtcProtocols',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('number', models.IntegerField(blank=True, null=True)),
                ('alias', models.CharField(blank=True, max_length=200, null=True)),
                ('comment', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'etc_protocols',
            },
        ),
        migrations.CreateModel(
            name='EtcHosts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('hostnames', models.CharField(blank=True, max_length=200, null=True)),
                ('pid_with_namespace', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'etc_hosts',
            },
        ),
        migrations.CreateModel(
            name='Ec2InstanceTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('instance_id', models.CharField(blank=True, max_length=200, null=True)),
                ('key', models.CharField(blank=True, max_length=200, null=True)),
                ('value', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'ec2_instance_tags',
            },
        ),
        migrations.CreateModel(
            name='Ec2InstanceMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('instance_id', models.CharField(blank=True, max_length=200, null=True)),
                ('instance_type', models.CharField(blank=True, max_length=200, null=True)),
                ('architecture', models.CharField(blank=True, max_length=200, null=True)),
                ('region', models.CharField(blank=True, max_length=200, null=True)),
                ('availability_zone', models.CharField(blank=True, max_length=200, null=True)),
                ('local_hostname', models.CharField(blank=True, max_length=200, null=True)),
                ('local_ipv4', models.CharField(blank=True, max_length=200, null=True)),
                ('mac', models.CharField(blank=True, max_length=200, null=True)),
                ('security_groups', models.CharField(blank=True, max_length=200, null=True)),
                ('iam_arn', models.CharField(blank=True, max_length=200, null=True)),
                ('ami_id', models.CharField(blank=True, max_length=200, null=True)),
                ('reservation_id', models.CharField(blank=True, max_length=200, null=True)),
                ('account_id', models.CharField(blank=True, max_length=200, null=True)),
                ('ssh_public_key', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'ec2_instance_metadata',
            },
        ),
        migrations.CreateModel(
            name='Drivers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('device_id', models.CharField(blank=True, max_length=200, null=True)),
                ('device_name', models.CharField(blank=True, max_length=200, null=True)),
                ('image', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('service', models.CharField(blank=True, max_length=200, null=True)),
                ('service_key', models.CharField(blank=True, max_length=200, null=True)),
                ('version', models.CharField(blank=True, max_length=200, null=True)),
                ('inf', models.CharField(blank=True, max_length=200, null=True)),
                ('class_field', models.CharField(blank=True, db_column='class', max_length=200, null=True)),
                ('provider', models.CharField(blank=True, max_length=200, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=200, null=True)),
                ('driver_key', models.CharField(blank=True, max_length=200, null=True)),
                ('date', models.BigIntegerField(blank=True, null=True)),
                ('signed', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'drivers',
            },
        ),
        migrations.CreateModel(
            name='DnsCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('flags', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'dns_cache',
            },
        ),
        migrations.CreateModel(
            name='DiskInfo',
            fields=[
                ('record_time', models.CharField(max_length=200)),
                ('partitions', models.IntegerField(blank=True, null=True)),
                ('disk_index', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('id', models.CharField(blank=True, max_length=200, primary_key=True, serialize=False)),
                ('pnp_device_id', models.CharField(blank=True, max_length=200, null=True)),
                ('disk_size', models.BigIntegerField(blank=True, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=200, null=True)),
                ('hardware_model', models.CharField(blank=True, max_length=200, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('serial', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'disk_info',
            },
        ),
        migrations.CreateModel(
            name='DevicePartitions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('device', models.CharField(blank=True, max_length=200, null=True)),
                ('partition', models.IntegerField(blank=True, null=True)),
                ('label', models.CharField(blank=True, max_length=200, null=True)),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('offset', models.BigIntegerField(blank=True, null=True)),
                ('blocks_size', models.BigIntegerField(blank=True, null=True)),
                ('blocks', models.BigIntegerField(blank=True, null=True)),
                ('inodes', models.BigIntegerField(blank=True, null=True)),
                ('flags', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'device_partitions',
            },
        ),
        migrations.CreateModel(
            name='DeviceHash',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('device', models.CharField(blank=True, max_length=200, null=True)),
                ('partition', models.CharField(blank=True, max_length=200, null=True)),
                ('inode', models.BigIntegerField(blank=True, null=True)),
                ('md5', models.CharField(blank=True, max_length=200, null=True)),
                ('sha1', models.CharField(blank=True, max_length=200, null=True)),
                ('sha256', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'device_hash',
            },
        ),
        migrations.CreateModel(
            name='DeviceFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('device', models.CharField(blank=True, max_length=200, null=True)),
                ('partition', models.CharField(blank=True, max_length=200, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('filename', models.CharField(blank=True, max_length=200, null=True)),
                ('inode', models.BigIntegerField(blank=True, null=True)),
                ('uid', models.BigIntegerField(blank=True, null=True)),
                ('gid', models.BigIntegerField(blank=True, null=True)),
                ('mode', models.CharField(blank=True, max_length=200, null=True)),
                ('size', models.BigIntegerField(blank=True, null=True)),
                ('block_size', models.IntegerField(blank=True, null=True)),
                ('atime', models.BigIntegerField(blank=True, null=True)),
                ('mtime', models.BigIntegerField(blank=True, null=True)),
                ('ctime', models.BigIntegerField(blank=True, null=True)),
                ('hard_links', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'device_file',
            },
        ),
        migrations.CreateModel(
            name='DefaultEnvironment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('variable', models.CharField(blank=True, max_length=200, null=True)),
                ('value', models.CharField(blank=True, max_length=200, null=True)),
                ('expand', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'default_environment',
            },
        ),
        migrations.CreateModel(
            name='CurlCertificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('hostname', models.CharField(blank=True, max_length=200, null=True)),
                ('common_name', models.CharField(blank=True, max_length=200, null=True)),
                ('organization', models.CharField(blank=True, max_length=200, null=True)),
                ('organization_unit', models.CharField(blank=True, max_length=200, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=200, null=True)),
                ('issuer_common_name', models.CharField(blank=True, max_length=200, null=True)),
                ('issuer_organization', models.CharField(blank=True, max_length=200, null=True)),
                ('issuer_organization_unit', models.CharField(blank=True, max_length=200, null=True)),
                ('valid_from', models.CharField(blank=True, max_length=200, null=True)),
                ('valid_to', models.CharField(blank=True, max_length=200, null=True)),
                ('sha256_fingerprint', models.CharField(blank=True, max_length=200, null=True)),
                ('sha1_fingerprint', models.CharField(blank=True, max_length=200, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('signature_algorithm', models.CharField(blank=True, max_length=200, null=True)),
                ('signature', models.CharField(blank=True, max_length=200, null=True)),
                ('subject_key_identifier', models.CharField(blank=True, max_length=200, null=True)),
                ('authority_key_identifier', models.CharField(blank=True, max_length=200, null=True)),
                ('key_usage', models.CharField(blank=True, max_length=200, null=True)),
                ('extended_key_usage', models.CharField(blank=True, max_length=200, null=True)),
                ('policies', models.CharField(blank=True, max_length=200, null=True)),
                ('subject_alternative_names', models.CharField(blank=True, max_length=200, null=True)),
                ('issuer_alternative_names', models.CharField(blank=True, max_length=200, null=True)),
                ('info_access', models.CharField(blank=True, max_length=200, null=True)),
                ('subject_info_access', models.CharField(blank=True, max_length=200, null=True)),
                ('policy_mappings', models.CharField(blank=True, max_length=200, null=True)),
                ('has_expired', models.IntegerField(blank=True, null=True)),
                ('basic_constraint', models.CharField(blank=True, max_length=200, null=True)),
                ('name_constraints', models.CharField(blank=True, max_length=200, null=True)),
                ('policy_constraints', models.CharField(blank=True, max_length=200, null=True)),
                ('dump_certificate', models.IntegerField(blank=True, null=True)),
                ('timeout', models.IntegerField(blank=True, null=True)),
                ('pem', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'curl_certificate',
            },
        ),
        migrations.CreateModel(
            name='Curl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('url', models.CharField(blank=True, max_length=200, null=True)),
                ('method', models.CharField(blank=True, max_length=200, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=200, null=True)),
                ('response_code', models.IntegerField(blank=True, null=True)),
                ('round_trip_time', models.BigIntegerField(blank=True, null=True)),
                ('bytes', models.BigIntegerField(blank=True, null=True)),
                ('result', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'curl',
            },
        ),
        migrations.CreateModel(
            name='CpuInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('device_id', models.CharField(blank=True, max_length=200, null=True)),
                ('model', models.CharField(blank=True, max_length=200, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=200, null=True)),
                ('processor_type', models.CharField(blank=True, max_length=200, null=True)),
                ('availability', models.CharField(blank=True, max_length=200, null=True)),
                ('cpu_status', models.IntegerField(blank=True, null=True)),
                ('number_of_cores', models.CharField(blank=True, max_length=200, null=True)),
                ('logical_processors', models.IntegerField(blank=True, null=True)),
                ('address_width', models.CharField(blank=True, max_length=200, null=True)),
                ('current_clock_speed', models.IntegerField(blank=True, null=True)),
                ('max_clock_speed', models.IntegerField(blank=True, null=True)),
                ('socket_designation', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'cpu_info',
            },
        ),
        migrations.CreateModel(
            name='Cpuid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('feature', models.CharField(blank=True, max_length=200, null=True)),
                ('value', models.CharField(blank=True, max_length=200, null=True)),
                ('output_register', models.CharField(blank=True, max_length=200, null=True)),
                ('output_bit', models.IntegerField(blank=True, null=True)),
                ('input_eax', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'cpuid',
            },
        ),
        migrations.CreateModel(
            name='Connectivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('disconnected', models.IntegerField(blank=True, null=True)),
                ('ipv4_no_traffic', models.IntegerField(blank=True, null=True)),
                ('ipv6_no_traffic', models.IntegerField(blank=True, null=True)),
                ('ipv4_subnet', models.IntegerField(blank=True, null=True)),
                ('ipv4_local_network', models.IntegerField(blank=True, null=True)),
                ('ipv4_internet', models.IntegerField(blank=True, null=True)),
                ('ipv6_subnet', models.IntegerField(blank=True, null=True)),
                ('ipv6_local_network', models.IntegerField(blank=True, null=True)),
                ('ipv6_internet', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'connectivity',
            },
        ),
        migrations.CreateModel(
            name='ChromeExtensions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('browser_type', models.CharField(blank=True, max_length=200, null=True)),
                ('uid', models.BigIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('profile', models.CharField(blank=True, max_length=200, null=True)),
                ('profile_path', models.CharField(blank=True, max_length=200, null=True)),
                ('referenced_identifier', models.CharField(blank=True, max_length=200, null=True)),
                ('identifier', models.CharField(blank=True, max_length=200, null=True)),
                ('version', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('default_locale', models.CharField(blank=True, max_length=200, null=True)),
                ('current_locale', models.CharField(blank=True, max_length=200, null=True)),
                ('update_url', models.CharField(blank=True, max_length=200, null=True)),
                ('author', models.CharField(blank=True, max_length=200, null=True)),
                ('persistent', models.IntegerField(blank=True, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('permissions', models.CharField(blank=True, max_length=200, null=True)),
                ('permissions_json', models.CharField(blank=True, max_length=200, null=True)),
                ('optional_permissions', models.CharField(blank=True, max_length=200, null=True)),
                ('optional_permissions_json', models.CharField(blank=True, max_length=200, null=True)),
                ('manifest_hash', models.CharField(blank=True, max_length=200, null=True)),
                ('referenced', models.BigIntegerField(blank=True, null=True)),
                ('from_webstore', models.CharField(blank=True, max_length=200, null=True)),
                ('state', models.CharField(blank=True, max_length=200, null=True)),
                ('install_time', models.CharField(blank=True, max_length=200, null=True)),
                ('install_timestamp', models.BigIntegerField(blank=True, null=True)),
                ('manifest_json', models.CharField(blank=True, max_length=200, null=True)),
                ('key', models.CharField(blank=True, max_length=200, null=True)),
                ('locale', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'chrome_extensions',
            },
        ),
        migrations.CreateModel(
            name='ChromeExtensionContentScripts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('browser_type', models.CharField(blank=True, max_length=200, null=True)),
                ('uid', models.BigIntegerField(blank=True, null=True)),
                ('identifier', models.CharField(blank=True, max_length=200, null=True)),
                ('version', models.CharField(blank=True, max_length=200, null=True)),
                ('script', models.CharField(blank=True, max_length=200, null=True)),
                ('match', models.CharField(blank=True, max_length=200, null=True)),
                ('profile_path', models.CharField(blank=True, max_length=200, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('referenced', models.BigIntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'chrome_extension_content_scripts',
            },
        ),
        migrations.CreateModel(
            name='ChocolateyPackages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('version', models.CharField(blank=True, max_length=200, null=True)),
                ('summary', models.CharField(blank=True, max_length=200, null=True)),
                ('author', models.CharField(blank=True, max_length=200, null=True)),
                ('license', models.CharField(blank=True, max_length=200, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'chocolatey_packages',
            },
        ),
        migrations.CreateModel(
            name='ChassisInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('audible_alarm', models.CharField(blank=True, max_length=200, null=True)),
                ('breach_description', models.CharField(blank=True, max_length=200, null=True)),
                ('chassis_types', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('lock', models.CharField(blank=True, max_length=200, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=200, null=True)),
                ('model', models.CharField(blank=True, max_length=200, null=True)),
                ('security_breach', models.CharField(blank=True, max_length=200, null=True)),
                ('serial', models.CharField(blank=True, max_length=200, null=True)),
                ('smbios_tag', models.CharField(blank=True, max_length=200, null=True)),
                ('sku', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(blank=True, max_length=200, null=True)),
                ('visible_alarm', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'chassis_info',
            },
        ),
        migrations.CreateModel(
            name='Certificates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('common_name', models.CharField(blank=True, max_length=200, null=True)),
                ('subject', models.CharField(blank=True, max_length=200, null=True)),
                ('issuer', models.CharField(blank=True, max_length=200, null=True)),
                ('ca', models.IntegerField(blank=True, null=True)),
                ('self_signed', models.IntegerField(blank=True, null=True)),
                ('not_valid_before', models.CharField(blank=True, max_length=200, null=True)),
                ('not_valid_after', models.CharField(blank=True, max_length=200, null=True)),
                ('signing_algorithm', models.CharField(blank=True, max_length=200, null=True)),
                ('key_algorithm', models.CharField(blank=True, max_length=200, null=True)),
                ('key_strength', models.CharField(blank=True, max_length=200, null=True)),
                ('key_usage', models.CharField(blank=True, max_length=200, null=True)),
                ('subject_key_id', models.CharField(blank=True, max_length=200, null=True)),
                ('authority_key_id', models.CharField(blank=True, max_length=200, null=True)),
                ('sha1', models.CharField(blank=True, max_length=200, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('serial', models.CharField(blank=True, max_length=200, null=True)),
                ('sid', models.CharField(blank=True, max_length=200, null=True)),
                ('store_location', models.CharField(blank=True, max_length=200, null=True)),
                ('store', models.CharField(blank=True, max_length=200, null=True)),
                ('username', models.CharField(blank=True, max_length=200, null=True)),
                ('store_id', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'certificates',
            },
        ),
        migrations.CreateModel(
            name='Carves',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('time', models.BigIntegerField(blank=True, null=True)),
                ('sha256', models.CharField(blank=True, max_length=200, null=True)),
                ('size', models.IntegerField(blank=True, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(blank=True, max_length=200, null=True)),
                ('carve_guid', models.CharField(blank=True, max_length=200, null=True)),
                ('request_id', models.CharField(blank=True, max_length=200, null=True)),
                ('carve', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'carves',
            },
        ),
        migrations.CreateModel(
            name='CarbonBlackInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('sensor_id', models.IntegerField(blank=True, null=True)),
                ('config_name', models.CharField(blank=True, max_length=200, null=True)),
                ('collect_store_files', models.IntegerField(blank=True, null=True)),
                ('collect_module_loads', models.IntegerField(blank=True, null=True)),
                ('collect_module_info', models.IntegerField(blank=True, null=True)),
                ('collect_file_mods', models.IntegerField(blank=True, null=True)),
                ('collect_reg_mods', models.IntegerField(blank=True, null=True)),
                ('collect_net_conns', models.IntegerField(blank=True, null=True)),
                ('collect_processes', models.IntegerField(blank=True, null=True)),
                ('collect_cross_processes', models.IntegerField(blank=True, null=True)),
                ('collect_emet_events', models.IntegerField(blank=True, null=True)),
                ('collect_data_file_writes', models.IntegerField(blank=True, null=True)),
                ('collect_process_user_context', models.IntegerField(blank=True, null=True)),
                ('collect_sensor_operations', models.IntegerField(blank=True, null=True)),
                ('log_file_disk_quota_mb', models.IntegerField(blank=True, null=True)),
                ('log_file_disk_quota_percentage', models.IntegerField(blank=True, null=True)),
                ('protection_disabled', models.IntegerField(blank=True, null=True)),
                ('sensor_ip_addr', models.CharField(blank=True, max_length=200, null=True)),
                ('sensor_backend_server', models.CharField(blank=True, max_length=200, null=True)),
                ('event_queue', models.IntegerField(blank=True, null=True)),
                ('binary_queue', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'carbon_black_info',
            },
        ),
        migrations.CreateModel(
            name='BitlockerInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('device_id', models.CharField(blank=True, max_length=200, null=True)),
                ('drive_letter', models.CharField(blank=True, max_length=200, null=True)),
                ('persistent_volume_id', models.CharField(blank=True, max_length=200, null=True)),
                ('conversion_status', models.IntegerField(blank=True, null=True)),
                ('protection_status', models.IntegerField(blank=True, null=True)),
                ('encryption_method', models.CharField(blank=True, max_length=200, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('percentage_encrypted', models.IntegerField(blank=True, null=True)),
                ('lock_status', models.IntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'bitlocker_info',
            },
        ),
        migrations.CreateModel(
            name='BackgroundActivitiesModerator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('last_execution_time', models.BigIntegerField(blank=True, null=True)),
                ('sid', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'background_activities_moderator',
            },
        ),
        migrations.CreateModel(
            name='AzureInstanceTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('vm_id', models.CharField(blank=True, max_length=200, null=True)),
                ('key', models.CharField(blank=True, max_length=200, null=True)),
                ('value', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'azure_instance_tags',
            },
        ),
        migrations.CreateModel(
            name='AzureInstanceMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('offer', models.CharField(blank=True, max_length=200, null=True)),
                ('publisher', models.CharField(blank=True, max_length=200, null=True)),
                ('sku', models.CharField(blank=True, max_length=200, null=True)),
                ('version', models.CharField(blank=True, max_length=200, null=True)),
                ('os_type', models.CharField(blank=True, max_length=200, null=True)),
                ('platform_update_domain', models.CharField(blank=True, max_length=200, null=True)),
                ('platform_fault_domain', models.CharField(blank=True, max_length=200, null=True)),
                ('vm_id', models.CharField(blank=True, max_length=200, null=True)),
                ('vm_size', models.CharField(blank=True, max_length=200, null=True)),
                ('subscription_id', models.CharField(blank=True, max_length=200, null=True)),
                ('resource_group_name', models.CharField(blank=True, max_length=200, null=True)),
                ('placement_group_id', models.CharField(blank=True, max_length=200, null=True)),
                ('vm_scale_set_name', models.CharField(blank=True, max_length=200, null=True)),
                ('zone', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'azure_instance_metadata',
            },
        ),
        migrations.CreateModel(
            name='Autoexec',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('source', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'autoexec',
            },
        ),
        migrations.CreateModel(
            name='Authenticode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('original_program_name', models.CharField(blank=True, max_length=200, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=200, null=True)),
                ('issuer_name', models.CharField(blank=True, max_length=200, null=True)),
                ('subject_name', models.CharField(blank=True, max_length=200, null=True)),
                ('result', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'authenticode',
            },
        ),
        migrations.CreateModel(
            name='AtomPackages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('version', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('license', models.CharField(blank=True, max_length=200, null=True)),
                ('homepage', models.CharField(blank=True, max_length=200, null=True)),
                ('uid', models.BigIntegerField(blank=True, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'atom_packages',
            },
        ),
        migrations.CreateModel(
            name='ArpCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('mac', models.CharField(blank=True, max_length=200, null=True)),
                ('interface', models.CharField(blank=True, max_length=200, null=True)),
                ('permanent', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'arp_cache',
            },
        ),
        migrations.CreateModel(
            name='AppcompatShims',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_time', models.CharField(max_length=200)),
                ('executable', models.CharField(blank=True, max_length=200, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('install_time', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=200, null=True)),
                ('sdb_id', models.CharField(blank=True, max_length=200, null=True)),
                ('hostip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='host.host', verbose_name='主机地址')),
            ],
            options={
                'db_table': 'appcompat_shims',
            },
        ),
    ]
